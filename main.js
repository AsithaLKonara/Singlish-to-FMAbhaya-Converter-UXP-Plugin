// Sample phonetic-to-Unicode Sinhala map
const phoneticMap = {
  // Independent vowels
  "a": "අ", "aa": "ආ", "A": "ඇ", "Aa": "ඈ", "AA": "ඈ",
  "i": "ඉ", "ii": "ඊ",
  "u": "උ", "uu": "ඌ",
  "R": "ඍ", "Ru": "ඎ",
  "e": "එ", "ee": "ඒ", "ai": "ඓ",
  "o": "ඔ", "oo": "ඕ", "au": "ඖ", "ou": "ඖ",

  // Vowel signs (diacritics)
  "_a": "", "_aa": "ා", "_A": "ැ", "_Aa": "ෑ", "_AA": "ෑ",
  "_i": "ි", "_ii": "ී", "_u": "ු", "_uu": "ූ",
  "_R": "ෘ", "_Ru": "ෲ",
  "_e": "ෙ", "_ee": "ේ", "_ai": "ෛ",
  "_o": "ො", "_oo": "ෝ", "_au": "ෞ",

  // Consonants and variations (generated)
}

const consonants = [
  { base: "k", letter: "ක" },
  { base: "kh", letter: "ඛ" },
  { base: "g", letter: "ග" },
  { base: "gh", letter: "ඝ" },
  { base: "zga", letter: "ඟ" },

  { base: "ch", letter: "ච" },
  { base: "chh", letter: "ඡ" },
  { base: "j", letter: "ජ" },
  { base: "zj", letter: "ඦ" },

  { base: "t", letter: "ට" },
  { base: "d", letter: "ඩ" },
  { base: "T", letter: "ඨ" },
  { base: "D", letter: "ඪ" },
  { base: "zd", letter: "ඬ" },

  { base: "th", letter: "ත" },
  { base: "thh", letter: "ථ" },
  { base: "dh", letter: "ධ" },
  { base: "dhh", letter: "ධ" },
  { base: "q", letter: "ද" },
  { base: "zq", letter: "ඳ" },
  { base: "zdh", letter: "ඳ" },

  { base: "n", letter: "න" },
  { base: "N", letter: "ණ" },
  { base: "zh", letter: "ඥ" },
  { base: "zk", letter: "ඤ" },

  { base: "p", letter: "ප" },
  { base: "ph", letter: "ඵ" },
  { base: "b", letter: "බ" },
  { base: "bh", letter: "භ" },
  { base: "B", letter: "ඹ" },

  { base: "m", letter: "ම" },
  { base: "y", letter: "ය" },
  { base: "r", letter: "ර" },
  { base: "l", letter: "ල" },
  { base: "L", letter: "ළ" },
  { base: "Lu", letter: "ළු" },
  { base: "v", letter: "ව" },
  { base: "sh", letter: "ශ" },
  { base: "Sh", letter: "ෂ" },
  { base: "s", letter: "ස" },
  { base: "h", letter: "හ" },
  { base: "f", letter: "ෆ" },
];

const vowels = ["a", "aa", "A", "Aa", "AA", "i", "ii", "u", "uu", "R", "Ru", "e", "ee", "ai", "o", "oo", "au"];

for (const { base, letter } of consonants) {
  // Pure consonant
  phoneticMap[base] = letter + "්";
  // Vowel combinations
  for (const v of vowels) {
    const key = base + v;
    const diacritic = phoneticMap["_" + v];
    if (diacritic !== undefined) {
      phoneticMap[key] = letter + diacritic;
    }
  }
  // Extra combinations
  phoneticMap[base + "x"] = letter + "ං";
  phoneticMap[base + "H"] = letter + "ඃ";
  phoneticMap[base + "ya"] = letter + "්ය";
  phoneticMap[base + "ra"] = letter + "්ර";
}

// console.log(phoneticMap);


const singlishToFmLegacyMap = {
  ':': '￦',
  '.': '�',
  '(': '￫',
  ')': '￩',
  '%': 'ￕ',
  '/': '$',
  '–': 'ￔ',
  '?': 'ￓ',
  '!': 'ￒ',
  '=': 'ￏ',
  '\'': 'ￎ',
  '+': 'ￍ',
  ':': 'ￌ',
  '÷': 'ￋ',
  ';': 'ﾶ',
  'ත්‍රෛ': 'ff;%',
  'ශෛ': 'ffY',
  'චෛ': 'ffp',
  'ජෛ': 'ffc',
  'කෛ': 'ffl',
  'මෛ': 'ffu',
  'පෛ': 'ffm',
  'දෛ': 'ffo',
  'තෛ': 'ff;',
  'නෛ': 'ffk',
  'ධෛ': 'ffO',
  'වෛ': 'ffj',
  'ප්‍රෞ': 'fm%!',
  'ෂ්‍යෝ': 'fIHda',
  'ඡ්‍යෝ': 'fPHda',
  'ඪ්‍යෝ': 'fVHda',
  'ඝ්‍යෝ': 'f>Hda',
  'ඛ්‍යෝ': 'fLHda',
  'ළ්‍යෝ': 'f<Hda',
  'ඵ්‍යෝ': 'fMHda',
  'ඨ්‍යෝ': 'fGHda',
  'ශ්‍යෝ': 'fYHda',
  'ක්‍ෂ්‍යෝ': 'fÌHda',
  'බ්‍යෝ': 'fnHda',
  'ච්‍යෝ': 'fpHda',
  'ඩ්‍යෝ': 'fâHda',
  'ෆ්‍යෝ': 'f*Hda',
  'ග්‍යෝ': 'f.Hda',
  'ජ්‍යෝ': 'fcHda',
  'ක්‍යෝ': 'flHda',
  'ල්‍යෝ': 'f:Hda',
  'ම්‍යෝ': 'fuHda',
  'න්‍යෝ': 'fkHda',
  'ප්‍යෝ': 'fmHda',
  'ද්‍යෝ': 'foHda',
  'ස්‍යෝ': 'fiHda',
  'ට්‍යෝ': 'fgHda',
  'ව්‍යෝ': 'fjHda',
  'ත්‍යෝ': 'f;Hda',
  'භ්‍යෝ': 'fNHda',
  'ධ්‍යෝ': 'fOHda',
  'ථ්‍යෝ': 'f:Hda',
  'ෂ්‍යො': 'fIHd',
  'ශ්‍යො': 'fYHd',
  'ඛ්‍යො': 'fLHd',
  'ක්‍ෂ්‍යො': 'fÌHd',
  'බ්‍යො': 'fnHd',
  'ව්‍යො': 'fjHd',
  'ඩ්‍යො': 'fvHd',
  'ෆ්‍යො': 'f*Hd',
  'ග්‍යො': 'f.Hd',
  'ජ්‍යො': 'fcHd',
  'ක්‍යො': 'flHd',
  'ම්‍යො': 'fuHd',
  'ප්‍යො': 'fmHd',
  'ද්‍යො': 'foHd',
  'ස්‍යො': 'fiHd',
  'ට්‍යො': 'fgHd',
  'ව්‍යො': 'fjHd',
  'ත්‍යො': 'f;Hd',
  'භ්‍යො': 'fNHd',
  'ධ්‍යො': 'fOHd',
  'ථ්‍යො': 'f:Hd',
  'ෂ්‍යෙ': 'fIH',
  'ඡ්‍යෙ': 'fPH',
  'ළ්‍යෙ': 'f<H',
  'ණ්‍යෙ': 'fKH',
  'ච්‍යෙ': 'fpH',
  'ල්‍යෙ': 'f:H',
  'න්‍යෙ': 'fkH',
  'ශ්‍යෙ': 'fYH',
  'ඛ්‍යෙ': 'fLH',
  'ක්‍ෂ්යෙ': 'fÌH',
  'බ්‍යෙ': 'fnH',
  'ඩ්‍යෙ': 'fvH',
  'ෆ්‍යෙ': 'f*H',
  'ග්‍යෙ': 'f.H',
  'ජ්‍යෙ': 'fcH',
  'ක්‍යෙ': 'flH',
  'ම්‍යෙ': 'fuH',
  'ප්‍යෙ': 'fmH',
  'ද්‍යෙ': 'foH',
  'ස්‍යෙ': 'fiH',
  'ට්‍යෙ': 'fgH',
  'ව්‍යෙ': 'fjH',
  'ත්‍යෙ': 'f;H',
  'භ්‍යෙ': 'fNH',
  'ධ්‍යෙ': 'fOH',
  'ථ්‍යෙ': 'f:H',
  'ෂ්‍රෝ': 'fI%da',
  'ඝ්‍රෝ': 'f>%da',
  'ශ්‍රෝ': 'fY%da',
  'ක්‍ෂ්‍රෝ': 'fÌ%da',
  'බ්‍රෝ': 'fn%da',
  'ඩ්‍රෝ': 'fv%da',
  'ෆ්‍රෝ': 'f*%da',
  'ග්‍රෝ': 'f.%da',
  'ක්‍රෝ': 'fl%da',
  'ප්‍රෝ': 'fm%da',
  'ද්‍රෝ': 'føda',
  'ස්‍රෝ': 'fi%da',
  'ට්‍රෝ': 'fg%da',
  'ත්‍රෝ': 'f;%da',
  'ශ්‍රො': 'fY%d',
  'ඩ්‍රො': 'fv%d',
  'ෆ්‍රො': 'f*%d',
  'ග්‍රො': 'f.%d',
  'ක්‍රො': 'fl%d',
  'ප්‍රො': 'fm%d',
  'ද්‍රො': 'fød',
  'ස්‍රො': 'fi%d',
  'ට්‍රො': 'fg%d',
  'ත්‍රො': 'f;%d',
  'ශ්‍රේ': 'fYa%',
  'බ්‍රේ': 'fí%',
  'ඩ්‍රේ': 'fâ%',
  'ෆ්‍රේ': 'f*a%',
  'ග්‍රේ': 'f.a%',
  'ක්‍රේ': 'fla%',
  'ප්‍රේ': 'fma%',
  'ද්‍රේ': 'føa',
  'ස්‍රේ': 'fia%',
  'ත්‍රේ': 'f;a%',
  'ධ්‍රේ': 'fè%',
  'ෂ්‍රෙ': 'fI%',
  'ශ්‍රෙ': 'fY%',
  'බ්‍රෙ': 'fn%',
  'ෆ්‍රෙ': 'f*%',
  'ග්‍රෙ': 'f.%',
  'ක්‍රෙ': 'fl%',
  'ප්‍රෙ': 'fm%',
  'ද්‍රෙ': 'fø',
  'ස්‍රෙ': 'fi%',
  'ත්‍රෙ': 'f;%',
  'භ්‍රෙ': 'fN%',
  'ධ්‍රෙ': 'fO%',
  '්‍ය': 'H',
  '්‍ර': '%',
  'ෂෞ': 'fI!',
  'ඡෞ': 'fP!',
  'ශෞ': 'fY!',
  'බෞ': 'fn!',
  'චෞ': 'fp!',
  'ඩෞ': 'fv!',
  'ෆෞ': 'f*!',
  'ගෞ': 'f.!',
  'ජෞ': 'fc!',
  'කෞ': 'fl!',
  'ලෞ': 'f:!',
  'මෞ': 'fu!',
  'නෞ': 'fk!',
  'පෞ': 'fm!',
  'දෞ': 'fo!',
  'රෞ': 'fr!',
  'සෞ': 'fi!',
  'ටෞ': 'fg!',
  'තෞ': 'f;!',
  'භෞ': 'fN!',
  'ඤෞ': 'f[!',
  'ෂෝ': 'fIda',
  'ඹෝ': 'fUda',
  'ඡෝ': 'fPda',
  'ඪෝ': 'fVda',
  'ඝෝ': 'f>da',
  'ඛෝ': 'fLda',
  'ළෝ': 'f<da',
  'ඟෝ': 'fÛda',
  'ණෝ': 'fKda',
  'ඵෝ': 'fMda',
  'ඨෝ': 'fGda',
  'ඬෝ': 'fËda',
  'ශෝ': 'fYda',
  'ඥෝ': 'f{da',
  'ඳෝ': 'f|da',
  'ක්‍ෂෝ': 'fÌda',
  'බෝ': 'fnda',
  'චෝ': 'fpda',
  'ඩෝ': 'fvda',
  'ෆෝ': 'f*da',
  'ගෝ': 'f.da',
  'හෝ': 'fyda',
  'ජෝ': 'fcda',
  'කෝ': 'flda',
  'ලෝ': 'f:da',
  'මෝ': 'fuda',
  'නෝ': 'fkda',
  'පෝ': 'fmda',
  'දෝ': 'foda',
  'රෝ': 'frda',
  'සෝ': 'fida',
  'ටෝ': 'fgda',
  'වෝ': 'fjda',
  'තෝ': 'f;da',
  'භෝ': 'fNda',
  'යෝ': 'fhda',
  'ඤෝ': 'f[da',
  'ධෝ': 'fOda',
  'ථෝ': 'f:da',
  'ෂො': 'fId',
  'ඹො': 'fUd',
  'ඡො': 'fPd',
  'ඪො': 'fVd',
  'ඝො': 'f>d',
  'ඛො': 'fLd',
  'ළො': 'f<d',
  'ඟො': 'fÕd',
  'ණො': 'fKd',
  'ඵො': 'fMd',
  'ඨො': 'fGd',
  'ඬො': 'fËd',
  'ශො': 'fYd',
  'ඥො': 'f{d',
  'ඳො': 'f|d',
  'ක්‍ෂො': 'fÌd',
  'බො': 'fnd',
  'චො': 'fpd',
  'ඩො': 'fvd',
  'ෆො': 'f*d',
  'ගො': 'f.d',
  'හො': 'fyd',
  'ජො': 'fcd',
  'කො': 'fld',
  'ලො': 'f:d',
  'මො': 'fud',
  'නො': 'fkd',
  'පො': 'fmd',
  'දො': 'fod',
  'රො': 'frd',
  'සො': 'fid',
  'ටො': 'fgd',
  'වො': 'fjd',
  'තො': 'f;d',
  'භො': 'fNd',
  'යො': 'fhd',
  'ඤො': 'f[d',
  'ධො': 'fOd',
  'ථො': 'f:d',
  'ෂේ': 'fIa',
  'ඹේ': 'fò',
  'ඡේ': 'fþ',
  'ඪේ': 'f\\a',
  'ඝේ': 'f>a',
  'ඛේ': 'fÄ',
  'ළේ': 'f<a',
  'ඟේ': 'fÛa',
  'ණේ': 'fKa',
  'ඵේ': 'fMa',
  'ඨේ': 'fGa',
  'ඬේ': 'få',
  'ශේ': 'fYa',
  'ඥේ': 'f{a',
  'ඳේ': 'f|a',
  'ක්‍ෂේ': 'fÌa',
  'බේ': 'fí',
  'චේ': 'fÉ',
  'ඩේ': 'fâ',
  'ෆේ': 'f*',
  'ගේ': 'f.a',
  'හේ': 'fya',
  'පේ': 'fma',
  'කේ': 'fla',
  'ලේ': 'f:a',
  'මේ': 'fï',
  'නේ': 'fka',
  'ජේ': 'f–',
  'දේ': 'foa',
  'රේ': 'f¾',
  'සේ': 'fia',
  'ටේ': 'fÜ',
  'වේ': 'fõ',
  'තේ': 'f;a',
  'භේ': 'fNa',
  'යේ': 'fha',
  'ඤේ': 'f[a',
  'ධේ': 'fè',
  'ථේ': 'f:a',
  'ෂෙ': 'fI',
  'ඹෙ': 'fU',
  'ඓ': 'ft',
  'ඡෙ': 'fP',
  'ඪෙ': 'fV',
  'ඝෙ': 'f>',
  'ඛෙ': 'fn',
  'ළෙ': 'f<',
  'ඟෙ': 'fÛ',
  'ණෙ': 'fK',
  'ඵෙ': 'fM',
  'ඨෙ': 'fG',
  'ඬෙ': 'fË',
  'ශෙ': 'fY',
  'ඥෙ': 'f{',
  'ඳෙ': 'fË',
  'ක්‍ෂෙ': 'fÌ',
  'බෙ': 'fn',
  'චෙ': 'fp',
  'ඩෙ': 'fv',
  'ෆෙ': 'f*',
  'ගෙ': 'f.',
  'හෙ': 'fy',
  'ජෙ': 'fc',
  'කෙ': 'fl',
  'ලෙ': 'f:',
  'මෙ': 'fu',
  'නෙ': 'fk',
  'පෙ': 'fm',
  'දෙ': 'fo',
  'රෙ': 'fr',
  'සෙ': 'fi',
  'ටෙ': 'fg',
  'වෙ': 'fj',
  'තෙ': 'f;',
  'භෙ': 'fN',
  'යෙ': 'fh',
  'ඤෙ': 'f[',
  'ධෙ': 'fO',
  'ථෙ': 'f:',
  'තු': ';=',
  'ගු': '.=',
  'කු': 'l=',
  'තූ': ';+',
  'ගූ': '.+',
  'කූ': 'l+',
  'රු': 're',
  'රූ': 'rE',
  'ආ': 'wd',
  'ඇ': 'we',
  'ඈ': 'wE',
  'ඌ': 'W!',
  'ඖ': 'T!',
  'ඒ': 'ta',
  'ඕ': '´',
  'ඳි': '¢',
  'ඳී': '£',
  'දූ': '¥',
  'දී': '§',
  'ලූ': '¨',
  'ර්‍ය': '©',
  'ඳූ': 'ª',
  'ර්': '¾',
  'ඨි': 'À',
  'ඨී': 'Á',
  'ඡී': 'Â',
  'ඛ්': 'Ä',
  'ඛි': 'Å',
  'ලු': 'Æ',
  'ඛී': 'Ç',
  'දි': 'È',
  'ච්': 'É',
  'ජ්': 'Ê',
  'රී': 'Í',
  'ඪී': 'Î',
  'ඪී': 'Ð:',
  'චි': 'Ñ',
  'ථී': 'Ò',
  'ථී': 'Ó',
  'ජී': 'Ô',
  'චී': 'Ö',
  'ඞ්': 'Ù',
  'ඵී': 'Ú',
  'ට්': 'Ü',
  'ඵි': 'Ý',
  'රි': 'ß',
  'ටී': 'à',
  'ටි': 'á',
  'ඩ්': 'â',
  'ඩී': 'ã',
  'ඩි': 'ä',
  'ඬ්': 'å',
  'ඬි': 'ç',
  'ධ්': 'è',
  'ඬී': 'é',
  'ධි': 'ê',
  'ධී': 'ë',
  'බි': 'ì',
  'බ්': 'í',
  'බී': 'î',
  'ම්': 'ï',
  'ජි': 'ð',
  'මි': 'ñ',
  'ඹ්': 'ò',
  'මී': 'ó',
  'ඹි': 'ô',
  'ව්': 'õ',
  'ඹී': 'ö',
  'ඳු': '÷',
  'ද්‍ර': 'ø',
  'වී': 'ù',
  'වි': 'ú',
  'ඞ්': 'û',
  'ඞී': 'ü',
  'ඡි': 'ý',
  'ඡ්': 'þ',
  'දු': 'ÿ',
  'ජ්': '–',
  'ර්‍ණ': '“',
  'ණී': '”',
  'ජී': '„',
  'ඡි': '‰',
  'ඩි': '',
  'ඤු': '™',
  'ග': '.',
  'ළු': '¿',
  'ෂ': 'I',
  'ං': 'x',
  'ඃ': '#',
  'ඹ': 'U',
  'ඡ': 'P',
  'ඪ': 'V',
  'ඝ': '>',
  'ඊ': 'B',
  'ඣ': 'CO',
  'ඛ': 'L',
  'ළ': '<',
  'ඟ': 'Û',
  'ණ': 'K',
  'ඵ': 'M',
  'ඨ': 'G',
  'ඃ': '#',
  '"': ':',
  '/': '\$',
  ')': '&',
  ':': '(',
  '-': ')',
  'ෆ': '*',
  'ල': ':',
  'රැ': '/',
  'ථ': ':',
  'ත': ';',
  'ඝ': '>',
  'රෑ': '?',
  'ක‍': 'C',
  '‍ෘ': 'D',
  'ෑ': 'E',
  'ත‍': 'F',
  '්‍ය': 'H',
  'ෂ': 'I',
  'න‍': 'J',
  'භ': 'N',
  'ධ': 'O',
  'ඡ': 'P',
  'ඍ': 'R',
  'ඔ': 'T',
  'ඹ': 'U',
  'ඪ': 'V',
  'උ': 'W',
  'ශ': 'Y',
  'ඤ': '[',
  'ඉ': 'b',
  'ජ': 'c',
  'ට': 'g',
  'ය': 'h',
  'ස': 'i',
  'ව': 'j',
  'න': 'k',
  'ක': 'l',
  'ප': 'm',
  'බ': 'n',
  'ද': 'o',
  'ච': 'p',
  'ර': 'r',
  'එ': 't',
  'ම': 'u',
  'ඩ': 'v',
  'අ': 'w',
  'හ': 'y',
  'ඥ': '{',
  'ඳ': '|',
  'ක්‍ෂ': 'Ì',
  'ැ': 'e',
  'ෙ': 'f',
  'ු': 'q',
  'ි': 's',
  'ූ': 'Q',
  'ී': 'S',
  'ෘ': 'D',
  'ෲ': 'DD',
  'ෟ': '!',
  'ා': 'd',
  '්': 'a',
  '￦': '"',
  '�': "'",
  '￫': '^',
  '￩': '&',
  'ￔ': ')',
  'ￓ': '@',
  'ￒ': '`',
  'ￏ': '}',
  'ￎ': '~',
  'ￍ': '¤',
  'ￌ': '•',
  'ￊ': '›',
  'ﾶ': '∙',
  'ￕ': ']',
  // Add more mappings as needed
};

function escapeRegExp(string) {
  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

function convertPhonicToUnicode(input) {
  const sortedKeys = Object.keys(phoneticMap).sort((a, b) => b.length - a.length);
  const pattern = new RegExp(sortedKeys.map(escapeRegExp).join('|'), 'g');
  return input.replace(pattern, match => phoneticMap[match] || match);
}

function convertUnicodeToFmLegacy(unicodeText) {
  const sortedKeys = Object.keys(singlishToFmLegacyMap).sort((a, b) => b.length - a.length);
  const pattern = new RegExp(sortedKeys.map(escapeRegExp).join('|'), 'g');
  return unicodeText.replace(pattern, match => singlishToFmLegacyMap[match] || match);
}

// --- DOM Elements ---
const inputTextArea = document.getElementById("phonicInput");
const outputTextArea = document.getElementById("convertedText");
const convertBtn = document.getElementById("btnConvert");
const insertBtn = document.getElementById("insertBtn");
const toast = document.getElementById("toast");

// --- Convert Button Logic ---
convertBtn.addEventListener("click", () => {
  const input = inputTextArea.value;
  const unicode = convertPhonicToUnicode(input);
  const finalOutput = convertUnicodeToFmLegacy(unicode);
  outputTextArea.value = finalOutput;
  showToast("Text converted!");
});

// --- Insert into Photoshop Text Layer (using UXP) ---
insertBtn.addEventListener("click", async () => {
  const text = outputTextArea.value;
  if (!text) return showToast("Nothing to insert!");

  try {
    const { app, core } = require("photoshop");

    await core.executeAsModal(async (executionContext) => {
      const doc = app.activeDocument;
      await doc.createTextLayer({
        name: "Sinhala Text",
        contents: text,
        fontSize: 136,
        position: { x: 150, y: 200 }
      });
    }, { commandName: "Insert Sinhala Text" });

    showToast("Text layer inserted!");
  } catch (err) {
    console.error("Insert failed:", err);
    showToast("Insert failed. UXP/Photoshop not available?");
  }
});


// --- Toast Utility ---
function showToast(message) {
  toast.textContent = message;
  toast.style.display = "block";
  setTimeout(() => {
    toast.style.display = "none";
  }, 2000);
}
